<?xml version="1.0" encoding="utf-8"?>
<s:NavigatorContent xmlns:fx="http://ns.adobe.com/mxml/2009" 
					xmlns:s="library://ns.adobe.com/flex/spark" 
					xmlns:mx="library://ns.adobe.com/flex/mx" 
					xmlns:components="org.cim.components.*"
					width="100%" height="100%" hide="cleanUp()" creationComplete="finish()">
	
	<fx:Script>
		<![CDATA[
			import mx.binding.utils.ChangeWatcher;
			
			import org.cim.DataShop;
			import org.cim.MixerManager;
			import org.cim.PopupManager;
			
			[Bindable]
			/**
			 * The app's data shop.
			 */
			private var dataShop:DataShop = DataShop.instance;
			
			[Bindable]
			/**
			 * The mixer manager that is used to send the start/stop 
			 * commands to the server.
			 */
			private var mixerManager:MixerManager = MixerManager.instance;
			
			[Bindable]
			/**
			 * The windowed application that the view is based in.
			 */
			public var application:OpenOrchestraClient;
			
			/**
			 * The function to be called when we want to switch to the home view.
			 */
			public var homeFunction:Function;
			
			/**
			 * Handles creation of the component completing.
			 * Watches for changes on the conductor stream playing value.
			 */
			private function finish():void {
				ChangeWatcher.watch(mixerManager, "isConductorViewPlaying", hideSlidersForConductorView);
			}
			
			/**
			 * Handles a change of the conductor stream playing value.
			 * Hides sliders if they are open and resets the mixers.
			 */
			private function hideSlidersForConductorView(event:Event):void {
				if(mixerManager.isConductorViewPlaying) {
					mixerPanel.closePanel();
					mixerPanel.loadMixers();
				}
			}
			
			/**
			 * Cleans the play page.
			 */
			private function cleanUp():void {
				// clean everything up first!
				searchBar.textInput.text = "";
				//keyboard.hideKeyboard();
				var popupManager:PopupManager = PopupManager.instance;
				popupManager.closeAllPopups();
				
				// clean the sheet music area
				sheetMusicPanel.clean();
				
				// clear the current practice session
				dataShop.currentPracticeSession = null;
				
				// close the tabs
				recordingsPanel.closePanel();
				mixerPanel.closePanel();
			}
			
			/**
			 * Attempts to switch to the home view.
			 * Cleans up and erases the current practice session.
			 */
			private function goToHomeView():void {
				// clean up the display
				// why is the cleanup function never called, 
				// and what does it do that breaks the playback from starting again?
				
				// close the tabs
				recordingsPanel.closePanel();
				mixerPanel.closePanel();
				
				try {
					// go home
					homeFunction();
				} catch(e:Error) {
					trace("no home function defined");
				}
			}
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	
	<s:layout>
		<s:VerticalLayout gap="0" />
	</s:layout>
	
	<!-- Title Area (title, clock, logout) -->
	<components:TitleArea width="100%" height="24" />
	
	<!-- Home/Search Area -->
	<s:BorderContainer width="100%" height="54" borderColor="0x999999"
					   borderStyle="inset" borderWeight="1">
		<s:layout>
			<s:HorizontalLayout horizontalAlign="center" verticalAlign="middle" 
								paddingLeft="12" paddingRight="30" />
		</s:layout>
		
		<components:HomeButton click="goToHomeView()" />
		
		<mx:Spacer width="40%" />
		
		<!--<components:OnOffToggleSwitch id="recordingModeSwitch" />-->
		
		<mx:Spacer width="100%" />
		
		<components:SearchBar id="searchBar" />
	</s:BorderContainer>
	
	<!-- Sheet and Sliders Area -->
	<s:Group width="100%" height="100%">
		<!-- Sliders -->
		<components:SliderPanel id="recordingsPanel" tabNumber="1" label="Recordings" width="40%" height="{dataShop.appWidth == 1920 ? 955 : 775}" 
								x="{(sheetMusicPanel.x + sheetMusicPanel.width) - (0.4 * this.width) - 1}" y="24" 
								sheetMusicPanelOwner="{sheetMusicPanel}" enabled="false" /> <!-- height was 775 for 1600x900, 955 for 1920x1080 -->
		<components:AudioMixerPanel id="mixerPanel" tabNumber="2" width="40%" height="{dataShop.appWidth == 1920 ? 955 : 775}" 
									currentSetting="{dataShop.currentScore.defaultSetting}" 
									x="{(sheetMusicPanel.x + sheetMusicPanel.width) - (0.4 * this.width) - 1}" y="24"  
									sheetMusicPanelOwner="{sheetMusicPanel}" enabled="{!mixerManager.isConductorViewPlaying}" /><!-- was x={... * this.width) - 1}, then -7 -->
		
		<!-- Sheet Music -->
		<components:SheetMusicPanel id="sheetMusicPanel" width="50%" top="6" left="6" bottom="6" tabCount="2" depth="100" />
	</s:Group>
	
	<!-- Keyboard -->
	<!--<components:PopupKeyboard id="keyboard" target="{mixerPanel.settingName}" 
							  x="{(this.width - keyboard.width) / 2}" 
							  y="{this.height - keyboard.height}" />-->
	
</s:NavigatorContent>
